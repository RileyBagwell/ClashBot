"""
    Contains all information about a single participant of a given match.
"""
from dataclasses import dataclass
from typing import Dict, Any, Optional

@dataclass
class Participant:
    def __init__(self, participant_dto=None):
        if participant_dto is None:
            # Initialize with default values
            self.all_in_pings = 0
            self.assist_me_pings = 0
            self.assists = 0
            self.baron_kills = 0
            self.bait_pings = 0
            self.bounty_level = 0
            self.champ_experience = 0
            self.champ_level = 0
            self.champion_id = 0
            self.champion_name = ""
            self.champion_transform = 0
            self.command_pings = 0
            self.consumables_purchased = 0
            self.damage_dealt_to_buildings = 0
            self.damage_dealt_to_objectives = 0
            self.damage_dealt_to_turrets = 0
            self.damage_self_mitigated = 0
            self.danger_pings = 0
            self.deaths = 0
            self.detector_wards_placed = 0
            self.double_kills = 0
            self.dragon_kills = 0
            self.eligible_for_progression = False
            self.enemy_missing_pings = 0
            self.enemy_vision_pings = 0
            self.first_blood_assist = False
            self.first_blood_kill = False
            self.first_tower_assist = False
            self.first_tower_kill = False
            self.game_ended_in_early_surrender = False
            self.game_ended_in_surrender = False
            self.get_back_pings = 0
            self.gold_earned = 0
            self.gold_spent = 0
            self.hold_pings = 0
            self.individual_position = ""
            self.inhibitor_kills = 0
            self.inhibitor_takedowns = 0
            self.inhibitors_lost = 0
            self.item0 = 0
            self.item1 = 0
            self.item2 = 0
            self.item3 = 0
            self.item4 = 0
            self.item5 = 0
            self.item6 = 0
            self.items_purchased = 0
            self.killing_sprees = 0
            self.kills = 0
            self.lane = ""
            self.largest_critical_strike = 0
            self.largest_killing_spree = 0
            self.largest_multi_kill = 0
            self.longest_time_spent_living = 0
            self.magic_damage_dealt = 0
            self.magic_damage_dealt_to_champions = 0
            self.magic_damage_taken = 0
            self.need_vision_pings = 0
            self.neutral_minions_killed = 0
            self.nexus_kills = 0
            self.nexus_takedowns = 0
            self.nexus_lost = 0
            self.objectives_stolen = 0
            self.objectives_stolen_assists = 0
            self.on_my_way_pings = 0
            self.participant_id = 0
            self.penta_kills = 0
            self.perk_defense = 0
            self.perk_flex = 0
            self.perk_offense = 0
            self.physical_damage_dealt = 0
            self.physical_damage_dealt_to_champions = 0
            self.physical_damage_taken = 0
            self.placement = 0
            self.player_augment1 = 0
            self.player_augment2 = 0
            self.player_augment3 = 0
            self.player_augment4 = 0
            self.player_subteam_id = 0
            self.profile_icon = 0
            self.push_pings = 0
            self.puuid = ""
            self.quadra_kills = 0
            self.riot_id_game_name = ""
            self.riot_id_tagline = ""
            self.role = ""
            self.sight_wards_bought_in_game = 0
            self.spell1_casts = 0
            self.spell2_casts = 0
            self.spell3_casts = 0
            self.spell4_casts = 0
            self.summoner1_casts = 0
            self.summoner1_id = 0
            self.summoner2_casts = 0
            self.summoner2_id = 0
            self.summoner_id = ""
            self.summoner_level = 0
            self.summoner_name = ""
            self.team_early_surrendered = False
            self.team_id = 0
            self.team_position = ""
            self.time_ccing_others = 0
            self.time_played = 0
            self.total_ally_jungle_minions_killed = 0
            self.total_damage_dealt = 0
            self.total_damage_dealt_to_champions = 0
            self.total_damage_shielded_on_teammates = 0
            self.total_damage_taken = 0
            self.total_enemy_jungle_minions_killed = 0
            self.total_heal = 0
            self.total_heals_on_teammates = 0
            self.total_minions_killed = 0
            self.total_time_cc_dealt = 0
            self.total_time_spent_dead = 0
            self.total_units_healed = 0
            self.triple_kills = 0
            self.true_damage_dealt = 0
            self.true_damage_dealt_to_champions = 0
            self.true_damage_taken = 0
            self.turret_kills = 0
            self.turret_takedowns = 0
            self.turrets_lost = 0
            self.unreal_kills = 0
            self.vision_cleared_pings = 0
            self.vision_score = 0
            self.vision_wards_bought_in_game = 0
            self.wards_killed = 0
            self.wards_placed = 0
            self.win = False
            self.subteam_placement = 0
            return

        # If participant_dto is a tuple from database
        if isinstance(participant_dto, tuple):
            iterator = iter(participant_dto)
            self.match_id = next(iterator)  # First field is match_id
            self.all_in_pings = next(iterator)
            self.assist_me_pings = next(iterator)
            self.assists = next(iterator)
            self.baron_kills = next(iterator)
            self.bounty_level = next(iterator)
            self.champ_experience = next(iterator)
            self.champ_level = next(iterator)
            self.champion_id = next(iterator)
            self.champion_name = next(iterator)
            self.champion_transform = next(iterator)
            self.command_pings = next(iterator)
            self.consumables_purchased = next(iterator)
            self.damage_dealt_to_buildings = next(iterator)
            self.damage_dealt_to_objectives = next(iterator)
            self.damage_dealt_to_turrets = next(iterator)
            self.damage_self_mitigated = next(iterator)
            self.danger_pings = next(iterator)
            self.deaths = next(iterator)
            self.detector_wards_placed = next(iterator)
            self.double_kills = next(iterator)
            self.dragon_kills = next(iterator)
            self.eligible_for_progression = next(iterator)
            self.enemy_missing_pings = next(iterator)
            self.enemy_vision_pings = next(iterator)
            self.first_blood_assist = next(iterator)
            self.first_blood_kill = next(iterator)
            self.first_tower_assist = next(iterator)
            self.first_tower_kill = next(iterator)
            self.game_ended_in_early_surrender = next(iterator)
            self.game_ended_in_surrender = next(iterator)
            self.get_back_pings = next(iterator)
            self.gold_earned = next(iterator)
            self.gold_spent = next(iterator)
            self.hold_pings = next(iterator)
            self.individual_position = next(iterator)
            self.inhibitor_kills = next(iterator)
            self.inhibitor_takedowns = next(iterator)
            self.inhibitors_lost = next(iterator)
            self.item0 = next(iterator)
            self.item1 = next(iterator)
            self.item2 = next(iterator)
            self.item3 = next(iterator)
            self.item4 = next(iterator)
            self.item5 = next(iterator)
            self.item6 = next(iterator)
            self.items_purchased = next(iterator)
            self.killing_sprees = next(iterator)
            self.kills = next(iterator)
            self.lane = next(iterator)
            self.largest_critical_strike = next(iterator)
            self.largest_killing_spree = next(iterator)
            self.largest_multi_kill = next(iterator)
            self.longest_time_spent_living = next(iterator)
            self.magic_damage_dealt = next(iterator)
            self.magic_damage_dealt_to_champions = next(iterator)
            self.magic_damage_taken = next(iterator)
            self.need_vision_pings = next(iterator)
            self.neutral_minions_killed = next(iterator)
            self.nexus_kills = next(iterator)
            self.nexus_takedowns = next(iterator)
            self.nexus_lost = next(iterator)
            self.objectives_stolen = next(iterator)
            self.objectives_stolen_assists = next(iterator)
            self.on_my_way_pings = next(iterator)
            self.participant_id = next(iterator)
            self.penta_kills = next(iterator)
            self.physical_damage_dealt = next(iterator)
            self.physical_damage_dealt_to_champions = next(iterator)
            self.physical_damage_taken = next(iterator)
            self.placement = next(iterator)
            self.player_augment1 = next(iterator)
            self.player_augment2 = next(iterator)
            self.player_augment3 = next(iterator)
            self.player_augment4 = next(iterator)
            self.player_subteam_id = next(iterator)
            self.profile_icon = next(iterator)
            self.push_pings = next(iterator)
            self.puuid = next(iterator)
            self.quadra_kills = next(iterator)
            self.riot_id_game_name = next(iterator)
            self.riot_id_tagline = next(iterator)
            self.role = next(iterator)
            self.sight_wards_bought_in_game = next(iterator)
            self.spell1_casts = next(iterator)
            self.spell2_casts = next(iterator)
            self.spell3_casts = next(iterator)
            self.spell4_casts = next(iterator)
            self.summoner1_casts = next(iterator)
            self.summoner1_id = next(iterator)
            self.summoner2_casts = next(iterator)
            self.summoner2_id = next(iterator)
            self.summoner_id = next(iterator)
            self.summoner_level = next(iterator)
            self.summoner_name = next(iterator)
            self.team_early_surrendered = next(iterator)
            self.team_id = next(iterator)
            self.team_position = next(iterator)
            self.time_ccing_others = next(iterator)
            self.time_played = next(iterator)
            self.total_ally_jungle_minions_killed = next(iterator)
            self.total_damage_dealt = next(iterator)
            self.total_damage_dealt_to_champions = next(iterator)
            self.total_damage_shielded_on_teammates = next(iterator)
            self.total_damage_taken = next(iterator)
            self.total_enemy_jungle_minions_killed = next(iterator)
            self.total_heal = next(iterator)
            self.total_heals_on_teammates = next(iterator)
            self.total_minions_killed = next(iterator)
            self.total_time_cc_dealt = next(iterator)
            self.total_time_spent_dead = next(iterator)
            self.total_units_healed = next(iterator)
            self.triple_kills = next(iterator)
            self.true_damage_dealt = next(iterator)
            self.true_damage_dealt_to_champions = next(iterator)
            self.true_damage_taken = next(iterator)
            self.turret_kills = next(iterator)
            self.turret_takedowns = next(iterator)
            self.turrets_lost = next(iterator)
            self.unreal_kills = next(iterator)
            self.vision_cleared_pings = next(iterator)
            self.vision_score = next(iterator)
            self.vision_wards_bought_in_game = next(iterator)
            self.wards_killed = next(iterator)
            self.wards_placed = next(iterator)
            self.win = next(iterator)
            self.subteam_placement = next(iterator)
            return

        # If participant_dto is from Riot API
        self.match_id = None  # Not available in API response
        self.all_in_pings = participant_dto.get('allInPings', 0)
        self.assist_me_pings = participant_dto.get('assistMePings', 0)
        self.assists = participant_dto.get('assists', 0)
        self.baron_kills = participant_dto.get('baronKills', 0)
        self.bait_pings = participant_dto.get('baitPings', 0)
        self.bounty_level = participant_dto.get('bountyLevel', 0)
        self.champ_experience = participant_dto.get('champExperience', 0)
        self.champ_level = participant_dto.get('champLevel', 0)
        self.champion_id = participant_dto.get('championId', 0)
        self.champion_name = participant_dto.get('championName', "")
        self.champion_transform = participant_dto.get('championTransform', 0)
        self.command_pings = participant_dto.get('commandPings', 0)
        self.consumables_purchased = participant_dto.get('consumablesPurchased', 0)
        self.damage_dealt_to_buildings = participant_dto.get('damageDealtToBuildings', 0)
        self.damage_dealt_to_objectives = participant_dto.get('damageDealtToObjectives', 0)
        self.damage_dealt_to_turrets = participant_dto.get('damageDealtToTurrets', 0)
        self.damage_self_mitigated = participant_dto.get('damageSelfMitigated', 0)
        self.danger_pings = participant_dto.get('dangerPings', 0)
        self.deaths = participant_dto.get('deaths', 0)
        self.detector_wards_placed = participant_dto.get('detectorWardsPlaced', 0)
        self.double_kills = participant_dto.get('doubleKills', 0)
        self.dragon_kills = participant_dto.get('dragonKills', 0)
        self.eligible_for_progression = participant_dto.get('eligibleForProgression', False)
        self.enemy_missing_pings = participant_dto.get('enemyMissingPings', 0)
        self.enemy_vision_pings = participant_dto.get('enemyVisionPings', 0)
        self.first_blood_assist = participant_dto.get('firstBloodAssist', False)
        self.first_blood_kill = participant_dto.get('firstBloodKill', False)
        self.first_tower_assist = participant_dto.get('firstTowerAssist', False)
        self.first_tower_kill = participant_dto.get('firstTowerKill', False)
        self.game_ended_in_early_surrender = participant_dto.get('gameEndedInEarlySurrender', False)
        self.game_ended_in_surrender = participant_dto.get('gameEndedInSurrender', False)
        self.get_back_pings = participant_dto.get('getBackPings', 0)
        self.gold_earned = participant_dto.get('goldEarned', 0)
        self.gold_spent = participant_dto.get('goldSpent', 0)
        self.hold_pings = participant_dto.get('holdPings', 0)
        self.individual_position = participant_dto.get('individualPosition', "")
        self.inhibitor_kills = participant_dto.get('inhibitorKills', 0)
        self.inhibitor_takedowns = participant_dto.get('inhibitorTakedowns', 0)
        self.inhibitors_lost = participant_dto.get('inhibitorsLost', 0)
        self.item0 = participant_dto.get('item0', 0)
        self.item1 = participant_dto.get('item1', 0)
        self.item2 = participant_dto.get('item2', 0)
        self.item3 = participant_dto.get('item3', 0)
        self.item4 = participant_dto.get('item4', 0)
        self.item5 = participant_dto.get('item5', 0)
        self.item6 = participant_dto.get('item6', 0)
        self.items_purchased = participant_dto.get('itemsPurchased', 0)
        self.killing_sprees = participant_dto.get('killingSprees', 0)
        self.kills = participant_dto.get('kills', 0)
        self.lane = participant_dto.get('lane', "")
        self.largest_critical_strike = participant_dto.get('largestCriticalStrike', 0)
        self.largest_killing_spree = participant_dto.get('largestKillingSpree', 0)
        self.largest_multi_kill = participant_dto.get('largestMultiKill', 0)
        self.longest_time_spent_living = participant_dto.get('longestTimeSpentLiving', 0)
        self.magic_damage_dealt = participant_dto.get('magicDamageDealt', 0)
        self.magic_damage_dealt_to_champions = participant_dto.get('magicDamageDealtToChampions', 0)
        self.magic_damage_taken = participant_dto.get('magicDamageTaken', 0)
        self.need_vision_pings = participant_dto.get('needVisionPings', 0)
        self.neutral_minions_killed = participant_dto.get('neutralMinionsKilled', 0)
        self.nexus_kills = participant_dto.get('nexusKills', 0)
        self.nexus_takedowns = participant_dto.get('nexusTakedowns', 0)
        self.nexus_lost = participant_dto.get('nexusLost', 0)
        self.objectives_stolen = participant_dto.get('objectivesStolen', 0)
        self.objectives_stolen_assists = participant_dto.get('objectivesStolenAssists', 0)
        self.on_my_way_pings = participant_dto.get('onMyWayPings', 0)
        self.participant_id = participant_dto.get('participantId', 0)
        self.penta_kills = participant_dto.get('pentaKills', 0)
        self.physical_damage_dealt = participant_dto.get('physicalDamageDealt', 0)
        self.physical_damage_dealt_to_champions = participant_dto.get('physicalDamageDealtToChampions', 0)
        self.physical_damage_taken = participant_dto.get('physicalDamageTaken', 0)
        self.placement = participant_dto.get('placement', 0)
        self.player_augment1 = participant_dto.get('playerAugment1', 0)
        self.player_augment2 = participant_dto.get('playerAugment2', 0)
        self.player_augment3 = participant_dto.get('playerAugment3', 0)
        self.player_augment4 = participant_dto.get('playerAugment4', 0)
        self.player_subteam_id = participant_dto.get('playerSubteamId', 0)
        self.profile_icon = participant_dto.get('profileIcon', 0)
        self.push_pings = participant_dto.get('pushPings', 0)
        self.puuid = participant_dto.get('puuid', "")
        self.quadra_kills = participant_dto.get('quadraKills', 0)
        self.riot_id_game_name = participant_dto.get('riotIdGameName', "")
        self.riot_id_tagline = participant_dto.get('riotIdTagline', "")
        self.role = participant_dto.get('role', "")
        self.sight_wards_bought_in_game = participant_dto.get('sightWardsBoughtInGame', 0)
        self.spell1_casts = participant_dto.get('spell1Casts', 0)
        self.spell2_casts = participant_dto.get('spell2Casts', 0)
        self.spell3_casts = participant_dto.get('spell3Casts', 0)
        self.spell4_casts = participant_dto.get('spell4Casts', 0)
        self.summoner1_casts = participant_dto.get('summoner1Casts', 0)
        self.summoner1_id = participant_dto.get('summoner1Id', 0)
        self.summoner2_casts = participant_dto.get('summoner2Casts', 0)
        self.summoner2_id = participant_dto.get('summoner2Id', 0)
        self.summoner_id = participant_dto.get('summonerId', "")
        self.summoner_level = participant_dto.get('summonerLevel', 0)
        self.summoner_name = participant_dto.get('summonerName', "")
        self.team_early_surrendered = participant_dto.get('teamEarlySurrendered', False)
        self.team_id = participant_dto.get('teamId', 0)
        self.team_position = participant_dto.get('teamPosition', "")
        self.time_ccing_others = participant_dto.get('timeCCingOthers', 0)
        self.time_played = participant_dto.get('timePlayed', 0)
        self.total_ally_jungle_minions_killed = participant_dto.get('totalAllyJungleMinionsKilled', 0)
        self.total_damage_dealt = participant_dto.get('totalDamageDealt', 0)
        self.total_damage_dealt_to_champions = participant_dto.get('totalDamageDealtToChampions', 0)
        self.total_damage_shielded_on_teammates = participant_dto.get('totalDamageShieldedOnTeammates', 0)
        self.total_damage_taken = participant_dto.get('totalDamageTaken', 0)
        self.total_enemy_jungle_minions_killed = participant_dto.get('totalEnemyJungleMinionsKilled', 0)
        self.total_heal = participant_dto.get('totalHeal', 0)
        self.total_heals_on_teammates = participant_dto.get('totalHealsOnTeammates', 0)
        self.total_minions_killed = participant_dto.get('totalMinionsKilled', 0)
        self.total_time_cc_dealt = participant_dto.get('totalTimeCCDealt', 0)
        self.total_time_spent_dead = participant_dto.get('totalTimeSpentDead', 0)
        self.total_units_healed = participant_dto.get('totalUnitsHealed', 0)
        self.triple_kills = participant_dto.get('tripleKills', 0)
        self.true_damage_dealt = participant_dto.get('trueDamageDealt', 0)
        self.true_damage_dealt_to_champions = participant_dto.get('trueDamageDealtToChampions', 0)
        self.true_damage_taken = participant_dto.get('trueDamageTaken', 0)
        self.turret_kills = participant_dto.get('turretKills', 0)
        self.turret_takedowns = participant_dto.get('turretTakedowns', 0)
        self.turrets_lost = participant_dto.get('turretsLost', 0)
        self.unreal_kills = participant_dto.get('unrealKills', 0)
        self.vision_cleared_pings = participant_dto.get('visionClearedPings', 0)
        self.vision_score = participant_dto.get('visionScore', 0)
        self.vision_wards_bought_in_game = participant_dto.get('visionWardsBoughtInGame', 0)
        self.wards_killed = participant_dto.get('wardsKilled', 0)
        self.wards_placed = participant_dto.get('wardsPlaced', 0)
        self.win = participant_dto.get('win', False)
        self.subteam_placement = participant_dto.get('subteamPlacement', 0)

    def __str__(self):
        str = f"""participant_db_id: {self.participant_db_id}
match_id: {self.match_id}
all_in_pings: {self.all_in_pings}
assists: {self.assists}
baron_kills: {self.baron_kills}
bounty_level: {self.bounty_level}
champ_experience: {self.champ_experience}
champ_level: {self.champ_level}
champion_id: {self.champion_id}
champion_name: {self.champion_name}
champion_transform: {self.champion_transform}
consumables_purchased: {self.consumables_purchased}
damage_dealt_to_buildings: {self.damage_dealt_to_buildings}
damage_dealt_to_objectives: {self.damage_dealt_to_objectives}
damage_dealt_to_turrets: {self.damage_dealt_to_turrets}
damage_self_mitigated: {self.damage_self_mitigated}
danger_pings: {self.danger_pings}
win: {self.win}"""
        return str
